import java.util.HashMap;
import java.util.HashSet;


public class HostPageRank {

	//Atributos
	public double c; //dampening factor
	private int countDocuments; //||v||
	private HashMap<String,HashSet<String> > hashBlocksPointTo; //I(p)
	private HashMap<String,Double> hashPR; //PR(p)
	private HashMap<String,Integer> hashCountPagesPointedBy; //||o(B)||
	private HashMap<String,Double> hashBlockPR; //GR(B)
	
	//Metodos
	HostPageRank()
	{
		c = 0.85;
		countDocuments = 0;
		hashBlocksPointTo = new HashMap<String,HashSet<String> >();
		hashPR = new HashMap<String,Double>();
		hashCountPagesPointedBy = new HashMap<String,Integer>();
		hashBlockPR = new HashMap<String,Double>();
	}
	
	private void setIP(String nameSourcePage,Object[] arrayPageNamesRef)
	{
		String nameDestPage;
		String hostSourcePage = HostService.getHost(nameSourcePage);
		for (int i = 0 ; i < arrayPageNamesRef.length ; ++i)
		{
			nameDestPage = (String)arrayPageNamesRef[i];
			if ( !(HostService.getHost(nameDestPage).equals(hostSourcePage)) )
			{
				if (hashBlocksPointTo.containsKey(nameDestPage))
				{
					hashBlocksPointTo.get(nameDestPage).add(arg0)
				}
			}
		}
	}
	
	public void processInfoPage(String nameSourcePage,Object[] arrayPageNamesRef)
	{
		//Set ||V||
		countDocuments++;
		
		if (arrayPageNamesRef != null)
		{
			//Set I(p)
			setIP(nameSourcePage,arrayPageNamesRef);
		
			//Set ||q||
			int total = arrayPageNamesRef.length;
			hashCountPagesPointedBy.put(nameSourcePage, new Integer(total));
		}
		
		hashPR.put(nameSourcePage, new Double(0.0));
			
	}

}
